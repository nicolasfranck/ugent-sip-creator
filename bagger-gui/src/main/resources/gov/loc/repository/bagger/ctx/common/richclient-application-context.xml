<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p" 
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
 classpath:org/springframework/beans/factory/xml/spring-beans-2.5.xsd"> 
<!--  As you can see, I'm skipping this xml namespaces
<beans xmlns="http://www.springframework.org/schema/beans" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"> 
<beans>
-->

  <!--
    Bean: application
    Usage: Platform required
    Description: This defines the singleton application instance to be used.
    Note that, currently, this object is not pluggable.  You must use the
    class specified below and configure it as needed.
  -->
  <bean id="application" class="org.springframework.richclient.application.Application">
    <constructor-arg index="0" ref="applicationDescriptor" />
    <constructor-arg index="1" ref="baggerLifecycleAdvisor" />
  </bean>

  <bean id="baggerLifecycleAdvisor" class="gov.loc.repository.bagger.BaggerLifecycleAdvisor"> 
    <property name="windowCommandBarDefinitions"
      value="gov/loc/repository/bagger/ui/commands-context.xml" />
    <property name="startingPageId" value="proxyPage" />
    <property name="registerableExceptionHandler" ref="exceptionHandler" />
    <property name="menubarBeanName" value="menuBar" />
    <property name="toolbarBeanName" value="toolBar" />
    <property name="windowCommandManagerBeanName" value="windowCommandManager" />
  </bean>
  
   <!--
    Bean: applicationDescriptor
    Usage: platform required
    Description: This defines the Application metadata to be used by the
    Application.  Note the reference to this bean in the constructor
    args in the application bean.
  -->
  <bean id="applicationDescriptor"
    class="org.springframework.richclient.application.support.DefaultApplicationDescriptor">
    <!--
    <property name="version" value="0.1" />
    <property name="buildId" value="20080616" />
    -->
  </bean> 
  
  <bean id="proxyPage" 
          class="org.springframework.richclient.application.docking.vldocking.VLDockingPageDescriptor">
        <property name="initialLayout">
            <bean class="org.springframework.core.io.ClassPathResource">
                <constructor-arg type="java.lang.String">
                    <value>gov/loc/repository/bagger/ui/layout/vldocking.xml</value>
                </constructor-arg>
            </bean>
        </property>
  </bean>
  
  <bean id="exceptionHandler"
    class="org.springframework.richclient.exceptionhandling.delegation.DelegatingExceptionHandler">
    <property name="delegateList">
      <list>
        <bean
          class="org.springframework.richclient.exceptionhandling.delegation.SimpleExceptionHandlerDelegate">
          <property name="throwableClass" value="java.lang.Error" />
          <property name="exceptionHandler">
            <bean class="org.springframework.richclient.exceptionhandling.MessagesDialogExceptionHandler">
              <property name="logLevel" value="FATAL" />
              <property name="shutdownPolicy" value="OBLIGATE" />
            </bean>
          </property>
        </bean>
        <!-- The order is important: if Throwable would be first then the others would be ignored -->
        <bean
          class="org.springframework.richclient.exceptionhandling.delegation.SimpleExceptionHandlerDelegate">
          <property name="throwableClass" value="java.lang.Throwable" />
          <property name="exceptionHandler">
            <bean class="org.springframework.richclient.exceptionhandling.MessagesDialogExceptionHandler">
              <property name="logLevel" value="ERROR" />
              <property name="shutdownPolicy" value="ASK" />
            </bean>
          </property>
        </bean>
      </list>
    </property>
  </bean>

  <!--
    Bean: serviceLocator
    Usage: Platform required
    Description: This defines the singleton application service locator instance.
    This is a trivial singleton object providing access to the configured
    services, as specified on the applicationServices property.
  -->
  <bean id="serviceLocator" class="org.springframework.richclient.application.ApplicationServicesLocator">
    <property name="applicationServices" ref="applicationServices" />
  </bean>

  <!--
    Bean: applicationServices
    Usage: Platform required (unless you set this up programmatically)
    Description: This configures the application services available to the platform.
    There are specific setter methods for all the standard services, see the
    javadoc on the DefaultApplicationServices class for more details.
    NOTE: The use of bean ids (idref) is preferred over using direct bean
    references to avoid startup problems with circular references.
  -->
  <bean id="applicationServices"
    class="org.springframework.richclient.application.support.DefaultApplicationServices">
    <property name="applicationObjectConfigurerId">
      <idref bean="applicationObjectConfigurer" />
    </property>
    <property name="binderSelectionStrategyId">
      <idref bean="binderSelectionStrategy" />
    </property>
    <property name="formComponentInterceptorFactoryId">
      <idref bean="formComponentInterceptorFactory" />
    </property>
    <property name="imageSourceId">
      <idref bean="imageSource" />
    </property>
    <property name="messageSourceId">
      <idref bean="messageSource"/>
    </property>
    <property name="rulesSourceId">
      <idref bean="rulesSource" />
    </property>
    
    <property name="registryEntries">
        <map>
           <entry key="org.springframework.richclient.command.CommandServices" value-ref="commandServices" />
        </map>
     </property>
  </bean>

  <bean id="applicationObjectConfigurer" depends-on="serviceLocator"
    class="org.springframework.richclient.application.config.DefaultApplicationObjectConfigurer">
  </bean>

  <bean id="applicationEventMulticaster"
    class="org.springframework.context.event.SimpleApplicationEventMulticaster" />

  <bean id="binderSelectionStrategy"
    class="org.springframework.richclient.form.binding.swing.SwingBinderSelectionStrategy">
    <property name="bindersForPropertyTypes">
      <map>
        <!--
          <entry>
          <key>
          <value type="java.lang.Class">java.util.Date</value>
          </key>
          <bean
          class="gov.loc.repository.bagger.ui.binder.CustomDatePickerBinder"/>
          </entry>
         -->
        <entry>
          <key>
            <value type="java.lang.Class">java.util.Date</value>
          </key>
          <bean class="org.springframework.richclient.form.binding.swing.date.NachoCalendarDateFieldBinder" />
        </entry>
      </map>
    </property>
  </bean>
   
  <bean id="lookAndFeelConfigurer"
    class="org.springframework.richclient.application.config.JGoodiesLooksConfigurer">
    <property name="popupDropShadowEnabled" value="false" />
    <property name="theme">
      <bean class="com.jgoodies.looks.plastic.theme.ExperienceBlue" />
    </property>
    <property name="3DEnabled"   value="true"/>
  </bean>
  
<!-- 
  <bean name="statusBar" class="org.springframework.richclient.application.statusbar.support.DefaultStatusBar" 
		depends-on="lookAndFeelConfigurer">
		<property name="cancelEnabled" value="true" />
		<property name="statusBarItems">
			<list>
				<ref bean="resizeStatusBarItem" />
			</list> 
		</property> 
  </bean>
 -->

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
      <list>
        <value>gov.loc.repository.bagger.ui.messages</value>
        <value>org.springframework.richclient.application.messages</value>
      </list>
    </property>
  </bean>

  <bean id="imageResourcesFactory" class="org.springframework.context.support.ResourceMapFactoryBean">
    <property name="locations">
      <list>
        <value>classpath:org/springframework/richclient/image/images.properties</value>
        <value>classpath:gov/loc/repository/bagger/ui/images.properties</value>
      </list>
    </property>
  </bean>

  <bean id="imageSource" class="org.springframework.richclient.image.DefaultImageSource">
    <constructor-arg index="0" ref="imageResourcesFactory" />
    <property name="brokenImageIndicator" value="/org/springframework/richclient/images/alert/error_obj.gif" />
  </bean>

  <bean id="formComponentInterceptorFactory"
    class="org.springframework.richclient.form.builder.support.ChainedInterceptorFactory">
    <property name="interceptorFactories">
      <list>
        <bean class="org.springframework.richclient.form.builder.support.ColorValidationInterceptorFactory">
          <property name="errorColor" value="255,245,245" />
        </bean>
        <bean class="org.springframework.richclient.form.builder.support.OverlayValidationInterceptorFactory" />
        <bean class="org.springframework.richclient.text.TextComponentPopupInterceptorFactory" />
        <bean class="org.springframework.richclient.list.ComboBoxAutoCompletionInterceptorFactory" />
      </list>
    </property>
  </bean>

  <bean id="rulesSource"
    class="gov.loc.repository.bagger.domain.BaggerValidationRulesSource" />
    
  
   <bean id="applicationPageFactory" depends-on="serviceLocator"
       class="org.springframework.richclient.application.docking.vldocking.VLDockingApplicationPageFactory">
  </bean>

  <bean id="bagView" class="org.springframework.richclient.application.docking.vldocking.VLDockingViewDescriptor">
    <property name="viewClass" value="gov.loc.repository.bagger.ui.BagView" />
    <property name="autoHideEnabled" value="true" />
     <property name="floatEnabled" value="true" />
     <property name="maximizeEnabled" value="true"/>
    
    <property name="viewProperties">
      <map>
        <entry key="bagger" value-ref="bagger" />
        <entry key="profileStore" value-ref="profiles" />
      </map>
    </property>
  </bean>
  
  <bean id="profilesView" 
     class="org.springframework.richclient.application.docking.vldocking.VLDockingViewDescriptor" depends-on="bagView">
    <property name="viewClass" value="gov.loc.repository.bagger.ui.ProfilesView" />
    <property name="autoHideEnabled" value="true" />
    <property name="floatEnabled" value="true" />
    <property name="maximizeEnabled" value="true"/>
  </bean>
  
  <bean id="consoleView" 
     class="org.springframework.richclient.application.docking.vldocking.VLDockingViewDescriptor" depends-on="bagView">
    <property name="viewClass" value="gov.loc.repository.bagger.ui.ConsoleView" />
    <property name="autoHideEnabled" value="true" />
    <property name="floatEnabled" value="true" />
    <property name="maximizeEnabled" value="true"/>
   </bean>

  <!--  
  <bean id="exceptionHandlingView" class="org.springframework.richclient.application.support.DefaultViewDescriptor">
    <property name="viewClass" value="gov.loc.repository.bagger.exceptionhandling.ExceptionHandlingView" />
  </bean>
  -->

  <bean id="setupWizard" class="org.springframework.richclient.application.setup.SetupWizard">
    <property name="licenseTextLocation" value="/gov/loc/repository/bagger/license.txt" />
  </bean>
  
 <!--
 <bean id="commandServices" class="org.springframework.richclient.command.support.DefaultCommandServices" p:toolBarButtonConfigurer-ref="toolBarButtonConfigurer"/>

 <bean id="toolBarButtonConfigurer" class="gov.loc.repository.bagger.BbToolBarCommandButtonConfigurer" p:useLargeIcons="true" />
   
 --> 
 
 <bean id="commandServices" class="org.springframework.richclient.command.support.DefaultCommandServices">
 <property name="toolBarButtonConfigurer"> <ref bean="toolBarButtonConfigurer"/> </property>
 </bean> 

 <bean id="toolBarButtonConfigurer" class="gov.loc.repository.bagger.BbToolBarCommandButtonConfigurer">
 <property name="useLargeIcons" value="true" />
 </bean> 
   
</beans>

