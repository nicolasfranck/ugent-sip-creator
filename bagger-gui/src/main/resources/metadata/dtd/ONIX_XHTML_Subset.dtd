<?xml encoding="UTF-8"?>

<!--

	**************************************************
	*                                                *
	*               ONIX INTERNATIONAL               *
	*                                                *
	*     BOOK PRODUCT INFORMATION MESSAGE SCHEMA    *
	*                                                *
	*                  XHTML MODULE                  *
	*                 XML DTD VERSION                *
	*                                                *
	*          Original author: Francis Cave         *
	*          Recent revisions: Graham Bell         *
	*                                                *
	*                  Release 3.0                   *
	*                  Revision 1                    *
	*                Status: RELEASED                *
	*            Release date: 2009-04-09            *
	*              Revised: 2012-01-27               *
	*                                                *
	*             (c) 2000-2011 EDItEUR              *
	*             http://www.editeur.org/            *
	*                                                *
	**************************************************


	NOTE - THIS MODULE CORRESPONDS TO A SUBSET OF W3C XHTML 1.1. IT ONLY INCLUDES
	ELEMENTS AND ASSOCIATED ATTRIBUTES THAT ARE VALID INSIDE THE XHTML ELEMENT 
	'body', AND EXCLUDES ELEMENTS FOR XHTML FORMS AND SCRIPTS AND 
	ATTRIBUTES THAT DEFINE BEHAVIOUR. SOME PARAMETER ENTITIES HAVE BEEN RENAMED 
	TO AVOID CLASHES WITH ONIX PARAMETER ENTITY NAMES.


	TERMS AND CONDITIONS OF USE OF THE ONIX BOOK PRODUCT INFORMATION MESSAGE SCHEMA

	All ONIX standards and documentation are copyright materials, made available 
	free of charge for general use. If you use any version of the ONIX Book Product 
	Information Message Schema, you will be deemed to have accepted these terms and 
	conditions:

	1. You agree that you will not add to, delete from or amend any version of the 
	ONIX Product Information Message Schema, or any part of the Schema except for 
	strictly internal use in your own organisation.

	2. You agree that if you wish to add to, amend, or make extracts of any version 
	of the Schema for any purpose that is not strictly internal to your own organisation, 
	you will in the first instance notify EDItEUR and allow EDItEUR to review 
	and comment on your proposed use, in the interest of securing an orderly 
	development of the Schema for the benefit of other users.

	If you do not accept these terms, you must not use any version of the ONIX Product 
	Information Message Schema.

	Full copies of all published versions of the latest release of this Schema and all 
	associated documentation are available from the EDItEUR web site, where may also be 
	found details of how to contact EDItEUR for advice on the use of this Schema. The URL 
	for the EDItEUR web site is:

	http://www.editeur.org/


	SCHEMA REVISION HISTORY (IN REVERSE CHRONOLOGICAL ORDER)

	2012-01-27: added XHTML 1.1 <ruby> and associated <rb>, <rp>, <rt>, <rbc> and <rtc> tags

	2009-04-09: initial release

-->

<!-- ================ Character mnemonic entities ========================= -->

<!--
THE FOLLOWING ENTITY SETS ARE EXCLUDED FROM ALL VERSIONS OF THE ONIX SCHEMA. 

<!ENTITY % HTMLlat1 PUBLIC "-//W3C//ENTITIES Latin 1 for XHTML//EN" "xhtml-lat1.ent">
%HTMLlat1;

<!ENTITY % HTMLsymbol PUBLIC "-//W3C//ENTITIES Symbols for XHTML//EN" "xhtml-symbol.ent">
%HTMLsymbol;

<!ENTITY % HTMLspecial PUBLIC "-//W3C//ENTITIES Special for XHTML//EN" "xhtml-special.ent">
%HTMLspecial;
-->

<!-- ================== Imported Names ==================================== -->

<!ENTITY % XHTMLContentType "CDATA">

<!-- media type, as per [RFC2045] -->

<!-- comma-separated list of media types, as per [RFC2045] -->

<!ENTITY % Charset "CDATA">

<!-- a character encoding, as per [RFC2045] -->

<!-- a space separated list of character encodings, as per [RFC2045] -->

<!ENTITY % XHTMLLanguageCode "NMTOKEN">

<!-- a language code, as per [RFC1766] -->

<!ENTITY % Character "CDATA">

<!-- a single character from [ISO10646] -->

<!ENTITY % XHTMLNumber "CDATA">

<!-- one or more digits -->

<!ENTITY % LinkTypes "CDATA">

<!-- space-separated list of link types -->

<!-- single or comma-separated list of media descriptors -->

<!ENTITY % URI "CDATA">

<!-- a Uniform Resource Identifier, see [RFC2396] -->

<!ENTITY % UriList "CDATA">

<!-- a space separated list of Uniform Resource Identifiers -->

<!-- date and time information. ISO date format -->

<!ENTITY % Script "CDATA">

<!-- script expression -->

<!ENTITY % StyleSheet "CDATA">

<!-- style sheet data -->

<!ENTITY % XHTMLText "CDATA">

<!-- used for titles etc. -->

<!-- render in this frame -->

<!ENTITY % Length "CDATA">

<!-- nn for pixels or nn% for percentage length -->

<!ENTITY % MultiLength "CDATA">

<!-- pixel, percentage, or relative -->

<!-- comma-separated list of MultiLength -->

<!ENTITY % Pixels "CDATA">

<!-- integer representing length in pixels -->

<!-- these are used for image maps -->

<!ENTITY % Shape "rect | circle | poly | default">

<!ENTITY % Coords "CDATA">

<!-- comma separated list of lengths -->

<!-- =================== Generic Attributes =============================== -->

<!--
	core attributes common to most elements
	id       document-wide unique id
	class    space separated list of classes
	style    associated style info
	title    advisory title/amplification
-->

<!ENTITY % coreattrs "
	id ID #IMPLIED
	class CDATA #IMPLIED
	style %StyleSheet; #IMPLIED
	title %XHTMLText; #IMPLIED">

<!--
	internationalization attributes
	lang        language code (backwards compatible)
	xml:lang    language code (as per XML 1.0 spec)
	dir         direction for weak/neutral text
-->

<!ENTITY % i18n "lang %XHTMLLanguageCode; #IMPLIED dir (ltr | rtl) #IMPLIED">

<!ENTITY % attrs "%coreattrs; %i18n;">

<!-- =================== Text Elements ==================================== -->

<!ENTITY % special "br | span | bdo | object | img | map">

<!ENTITY % fontstyle "tt | i | b | big | small">

<!ENTITY % phrase "em | strong | dfn | code | q | sub | sup | samp | kbd | var | cite | abbr | acronym">

<!ENTITY % gloss "ruby">

<!ENTITY % inline "a | %special; | %fontstyle; | %phrase; | %gloss;">

<!-- %Inline; covers inline or "text-level" elements -->

<!ENTITY % Inline "(#PCDATA | %inline;)*">

<!-- ================== Block level elements ============================== -->

<!ENTITY % heading "h1 | h2 | h3 | h4 | h5 | h6">

<!ENTITY % lists "ul | ol | dl">

<!ENTITY % blocktext "pre | hr | blockquote | address">

<!ENTITY % block "p | %heading; | div | %lists; | %blocktext; | table">

<!ENTITY % Block "(%block;)*">

<!-- %Flow; mixes Block and Inline and is used for list items etc. -->

<!ENTITY % Flow "(#PCDATA | %block; | %inline;)*">

<!-- ================== Content models for exclusions ===================== -->

<!-- a elements use %Inline; excluding a -->

<!ENTITY % a.content "(#PCDATA | %special; | %fontstyle; | %phrase; | %gloss;)*">

<!-- pre uses %Inline excluding img, object, big, small, sup or sup -->

<!ENTITY % pre.content "(#PCDATA | a | br | span | bdo | map | tt | i | b | %phrase; | %gloss;)*">

<!-- ruby allows %Inline elements excluding <ruby> -->

<!ENTITY % ruby.content "(#PCDATA | a | %special; | %fontstyle; | %phrase;)*">

<!-- =================== Document Body ==================================== -->

<!-- generic language/style container -->
<!ELEMENT div %Flow;>
<!ATTLIST div %attrs;>

<!-- =================== Paragraphs ======================================= -->

<!ELEMENT p %Inline;>
<!ATTLIST p	%attrs;>

<!-- =================== Headings ========================================= -->

<!--
	There are six levels of headings from h1 (the most important)
	to h6 (the least important).
-->

<!ELEMENT h1 %Inline;>
<!ATTLIST h1 %attrs;>

<!ELEMENT h2 %Inline;>
<!ATTLIST h2 %attrs;>

<!ELEMENT h3 %Inline;>
<!ATTLIST h3 %attrs;>

<!ELEMENT h4 %Inline;>
<!ATTLIST h4 %attrs;>

<!ELEMENT h5 %Inline;>
<!ATTLIST h5 %attrs;>

<!ELEMENT h6 %Inline;>
<!ATTLIST h6 %attrs;>

<!-- =================== Lists ============================================ -->

<!-- Unordered list -->
<!ELEMENT ul (li)+>
<!ATTLIST ul %attrs;>

<!-- Ordered (numbered) list -->
<!ELEMENT ol (li)+>
<!ATTLIST ol %attrs;>

<!-- list item -->
<!ELEMENT li %Flow;>
<!ATTLIST li %attrs;>

<!-- definition lists - dt for term, dd for its definition -->
<!ELEMENT dl (dt | dd)+>
<!ATTLIST dl %attrs;>

<!ELEMENT dt %Inline;>
<!ATTLIST dt %attrs;>

<!ELEMENT dd %Flow;>
<!ATTLIST dd %attrs;>

<!-- =================== Address ========================================== -->

<!-- information on author -->
<!ELEMENT address %Inline;>
<!ATTLIST address %attrs;>

<!-- =================== Horizontal Rule ================================== -->

<!ELEMENT hr EMPTY>
<!ATTLIST hr %attrs;>

<!-- =================== Preformatted Text ================================ -->

<!-- content is %Inline; excluding "img | object | big | small | sub | sup" -->
<!ELEMENT pre %pre.content;>
<!ATTLIST pre %attrs;
	xml:space (preserve) 'preserve'>

<!-- =================== Block-like Quotes ================================ -->

<!ELEMENT blockquote (%Block;)>
<!ATTLIST blockquote %attrs;
	cite %URI; #IMPLIED>

<!-- ================== The Anchor Element ================================ -->

<!-- content is %Inline; except that anchors shouldn't be nested -->
<!ELEMENT a %a.content;>
<!ATTLIST a %attrs;
	charset %Charset; #IMPLIED
	type %XHTMLContentType; #IMPLIED
	name NMTOKEN #IMPLIED
	href %URI; #IMPLIED
	hreflang %XHTMLLanguageCode; #IMPLIED
	rel %LinkTypes; #IMPLIED
	rev %LinkTypes; #IMPLIED
	accesskey %Character; #IMPLIED
	shape (%Shape;) 'rect'
	coords %Coords; #IMPLIED
	tabindex %XHTMLNumber; #IMPLIED
	onfocus %Script; #IMPLIED
	onblur %Script; #IMPLIED>

<!-- ===================== Inline Elements ================================ -->

<!-- generic language/style container -->
<!ELEMENT span %Inline;>
<!ATTLIST span %attrs;>

<!-- I18N BiDi over-ride -->
<!ELEMENT bdo %Inline;>
<!ATTLIST bdo
	%coreattrs;
	lang %XHTMLLanguageCode; #IMPLIED
	xml:lang %XHTMLLanguageCode; #IMPLIED
	dir (ltr | rtl) #REQUIRED>

<!-- forced line break -->
<!ELEMENT br EMPTY>
<!ATTLIST br %coreattrs;>

<!-- emphasis -->
<!ELEMENT em %Inline;>
<!ATTLIST em %attrs;>

<!-- strong emphasis -->
<!ELEMENT strong %Inline;>
<!ATTLIST strong %attrs;>

<!-- definitional -->
<!ELEMENT dfn %Inline;>
<!ATTLIST dfn %attrs;>

<!-- program code -->
<!ELEMENT code %Inline;>
<!ATTLIST code %attrs;>

<!-- sample -->
<!ELEMENT samp %Inline;>
<!ATTLIST samp %attrs;>

<!-- something user would type -->
<!ELEMENT kbd %Inline;>
<!ATTLIST kbd %attrs;>

<!-- variable -->
<!ELEMENT var %Inline;>
<!ATTLIST var %attrs;>

<!-- citation -->
<!ELEMENT cite %Inline;>
<!ATTLIST cite %attrs;>

<!-- abbreviation -->
<!ELEMENT abbr %Inline;>
<!ATTLIST abbr %attrs;>

<!-- acronym -->
<!ELEMENT acronym %Inline;>
<!ATTLIST acronym %attrs;>

<!-- inlined quote -->
<!ELEMENT q %Inline;>
<!ATTLIST q %attrs;
	cite %URI; #IMPLIED>

<!-- subscript -->
<!ELEMENT sub %Inline;>
<!ATTLIST sub %attrs;>

<!-- superscript -->
<!ELEMENT sup %Inline;>
<!ATTLIST sup %attrs;>

<!-- fixed pitch font -->
<!ELEMENT tt %Inline;>
<!ATTLIST tt %attrs;>

<!-- italic font -->
<!ELEMENT i %Inline;>
<!ATTLIST i %attrs;>

<!-- bold font -->
<!ELEMENT b %Inline;>
<!ATTLIST b %attrs;>

<!-- bigger font -->
<!ELEMENT big %Inline;>
<!ATTLIST big %attrs;>

<!-- smaller font -->
<!ELEMENT small %Inline;>
<!ATTLIST small %attrs;>

<!-- ==================== Object ====================================== -->

<!--
	object is used to embed objects as part of HTML pages.
	param elements should precede other content. Parameters
	can also be expressed as attribute/value pairs on the
	object element itself when brevity is desired.
-->

<!ELEMENT object (#PCDATA | param | %block; | %inline;)*>
<!ATTLIST object %attrs;
	declare (declare) #IMPLIED
	classid %URI; #IMPLIED
	codebase %URI; #IMPLIED
	data %URI; #IMPLIED
	type %XHTMLContentType; #IMPLIED
	codetype %XHTMLContentType; #IMPLIED
	archive %UriList; #IMPLIED
	standby %XHTMLText; #IMPLIED
	height %Length; #IMPLIED
	width %Length; #IMPLIED
	usemap %URI; #IMPLIED
	name NMTOKEN #IMPLIED
	tabindex %XHTMLNumber; #IMPLIED>

<!--
	param is used to supply a named property value.
	In XML it would seem natural to follow RDF and support an
	abbreviated syntax where the param elements are replaced
	by attribute value pairs on the object start tag.
-->

<!ELEMENT param EMPTY>
<!ATTLIST param
	id ID #IMPLIED
	name CDATA #IMPLIED
	value CDATA #IMPLIED
	valuetype (data | ref | object) 'data'
	type %XHTMLContentType; #IMPLIED>

<!-- =================== Images =========================================== -->

<!--
	To avoid accessibility problems for people who aren't
	able to see the image, you should provide a text
	description using the alt and longdesc attributes.
	In addition, avoid the use of server-side image maps.
	Note that in this DTD there is no name attribute. That
	is only available in the transitional and frameset DTD.
-->

<!ELEMENT img EMPTY>
<!ATTLIST img %attrs;
	src %URI; #REQUIRED
	alt %XHTMLText; #REQUIRED
	longdesc %URI; #IMPLIED
	height %Length; #IMPLIED
	width %Length; #IMPLIED
	usemap %URI; #IMPLIED
	ismap (ismap) #IMPLIED>

<!--
	usemap points to a map element which may be in this document
	or an external document, although the latter is not widely supported
-->

<!-- ================== Client-side image maps ============================ -->

<!--
	These can be placed in the same document or grouped in a
	separate document although this isn't yet widely supported
-->

<!ELEMENT map ((%block;)+ | area+)>
<!ATTLIST map
	%i18n;
	id ID #REQUIRED
	class CDATA #IMPLIED
	style %StyleSheet; #IMPLIED
	title %XHTMLText; #IMPLIED
	name NMTOKEN #IMPLIED>

<!ELEMENT area EMPTY>
<!ATTLIST area %attrs;
	shape (%Shape;) 'rect'
	coords %Coords; #IMPLIED
	href %URI; #IMPLIED
	nohref (nohref) #IMPLIED
	alt %XHTMLText; #REQUIRED>

<!-- ======================= Tables ======================================= -->

<!-- Derived from IETF HTML table standard, see [RFC1942] -->

<!--
	The border attribute sets the thickness of the frame around the
	table. The default units are screen pixels.

	The frame attribute specifies which parts of the frame around
	the table should be rendered. The values are not the same as
	CALS to avoid a name clash with the valign attribute.
-->

<!ENTITY % TFrame "void | above | below | hsides | lhs | rhs | vsides | box | border">

<!--
	The rules attribute defines which rules to draw between cells:
	If rules is absent then assume "none" if border is absent or border="0" otherwise "all"
-->

<!ENTITY % TRules "none | groups | rows | cols | all">

<!-- horizontal placement of table relative to document -->

<!--
	horizontal alignment attributes for cell contents
	char        alignment char, e.g. char=':'
	charoff     offset for alignment char
-->

<!ENTITY % cellhalign " align (left | center | right | justify | char) #IMPLIED char %Character; #IMPLIED charoff %Length; #IMPLIED">

<!-- vertical alignment attributes for cell contents -->

<!ENTITY % cellvalign "valign (top | middle | bottom | baseline) #IMPLIED">

<!ELEMENT table (caption?,(col* | colgroup*),thead?,tfoot?,(tbody+ | tr+))>

<!ELEMENT caption %Inline;>

<!ELEMENT thead (tr)+>

<!ELEMENT tfoot (tr)+>

<!ELEMENT tbody (tr)+>

<!ELEMENT colgroup (col)*>

<!ELEMENT col EMPTY>

<!ELEMENT tr (th | td)+>

<!ELEMENT th %Flow;>

<!ELEMENT td %Flow;>

<!ATTLIST table %attrs;
	summary %XHTMLText; #IMPLIED
	width %Length; #IMPLIED
	border %Pixels; #IMPLIED
	frame (%TFrame;) #IMPLIED
	rules (%TRules;) #IMPLIED
	cellspacing %Length; #IMPLIED
	cellpadding %Length; #IMPLIED>

<!ATTLIST caption %attrs;>

<!--
	colgroup groups a set of col elements. It allows you to group
	several semantically related columns together.
-->

<!ATTLIST colgroup %attrs;
	span %XHTMLNumber; '1'
	width %MultiLength; #IMPLIED
	%cellhalign;
	%cellvalign;>

<!--
	col elements define the alignment properties for cells in
	one or more columns.

	The width attribute specifies the width of the columns, e.g.
		width=64        width in screen pixels
		width=0.5*      relative width of 0.5

	The span attribute causes the attributes of one
	col element to apply to more than one column.
-->

<!ATTLIST col %attrs;
	span %XHTMLNumber; '1'
	width %MultiLength; #IMPLIED
	%cellhalign;
	%cellvalign;>

<!--
	Use thead to duplicate headers when breaking table
	across page boundaries, or for static headers when
	tbody sections are rendered in scrolling panel.

	Use tfoot to duplicate footers when breaking table
	across page boundaries, or for static footers when
	tbody sections are rendered in scrolling panel.

	Use multiple tbody sections when rules are needed
	between groups of table rows.
-->

<!ATTLIST thead %attrs;
	%cellhalign;
	%cellvalign;>

<!ATTLIST tfoot %attrs;
	%cellhalign;
	%cellvalign;>

<!ATTLIST tbody %attrs;
	%cellhalign;
	%cellvalign;>

<!ATTLIST tr %attrs;
	%cellhalign;
	%cellvalign;>

<!-- Scope is simpler than headers attribute for common tables -->

<!ENTITY % Scope "row | col | rowgroup | colgroup">

<!-- th is for headers, td for data and for cells acting as both -->

<!ATTLIST th %attrs;
	abbr %XHTMLText; #IMPLIED
	axis CDATA #IMPLIED
	headers IDREFS #IMPLIED
	scope (%Scope;) #IMPLIED
	rowspan %XHTMLNumber; '1'
	colspan %XHTMLNumber; '1'
	%cellhalign;
	%cellvalign;>

<!ATTLIST td %attrs;
	abbr %XHTMLText; #IMPLIED
	axis CDATA #IMPLIED
	headers IDREFS #IMPLIED
	scope (%Scope;) #IMPLIED
	rowspan %XHTMLNumber; '1'
	colspan %XHTMLNumber; '1'
	%cellhalign;
	%cellvalign;>

<!-- =================== Ruby Elements ==================================== -->

<!-- simple or complex ruby, XHTML 1.1 only -->

<!ELEMENT ruby ((rb,(rt | (rp,rt,rp))) | (rbc,rtc,rtc?))>
<!ATTLIST ruby %attrs;>

<!ELEMENT rbc (rb)+>
<!ATTLIST rbc %attrs;>

<!ELEMENT rtc (rt)+>
<!ATTLIST rtc %attrs;>

<!ELEMENT rb %ruby.content;>
<!ATTLIST rb %attrs;>

<!ELEMENT rp (#PCDATA)>
<!ATTLIST rp %attrs;>

<!ELEMENT rt %ruby.content;>
<!ATTLIST rt %attrs; 
	rbspan CDATA #IMPLIED>
